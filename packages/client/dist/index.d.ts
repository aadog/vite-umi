import { IRoute, IUmiConfig } from "./types";
export declare function defineUmi(umiConfig: IUmiConfig): IUmiConfig;
export declare function defineRoute(umiRoute: IRoute): IRoute;
export { PropsWithUmi, FunctionComponent, FC, RequestConfig, IFormatResultAdaptor, RequestError, IErrorHandler, IAdaptor, IAppData, IUmiConfig, IRoute, ErrorShowType, IErrorInfo, } from './types';
export { UmiAppContext } from "./UmiAppContext";
export { RouteContext } from "./RouteContext";
export { AccessContext } from './access/context';
export { transformRoutes, DynamicRouter } from './route';
export type { DynamicRouterProps } from './route';
export { Provider as ModelProvider, useModel } from './model/index';
export { useAccess, Access, useAccessMarkedRoutes } from './access';
export { Navigate, createSearchParams, Link, matchPath, matchRoutes, NavLink, Outlet, useLocation, useMatch, useNavigate, useOutlet, useParams, useResolvedPath, useRoutes, useSearchParams, BrowserRouter, Routes, Route } from 'react-router-dom';
